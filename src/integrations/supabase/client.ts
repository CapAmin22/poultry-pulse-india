
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://xtdukbzdbzbemyqaifhp.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh0ZHVrYnpkYnpiZW15cWFpZmhwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQwMjAxNDYsImV4cCI6MjA1OTU5NjE0Nn0.8QARO-qy_LLVb2RHqkwCJHyrluVaMEcc6kMRtxQMBlY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
    flowType: 'pkce'
  },
  realtime: {
    params: {
      eventsPerSecond: 10
    }
  },
  global: {
    headers: {
      'x-application-name': '22POULTRY'
    }
  }
});

// Create a proper connection test function that can be called from anywhere
export const testSupabaseConnection = async () => {
  try {
    console.log('Testing Supabase connection...');
    const { data, error } = await supabase
      .from('profiles')
      .select('count')
      .limit(1);
    
    if (error) {
      console.error('Supabase connection error:', error.message);
      return { success: false, error };
    }
    
    console.log('Supabase connected successfully');
    return { success: true, data };
  } catch (err) {
    console.error('Supabase connection error:', err);
    return { success: false, error: err };
  }
};

// Test connection on init
(async () => {
  try {
    const result = await testSupabaseConnection();
    if (!result.success) {
      console.warn('Supabase connection warning: Connection test failed, some features may not work correctly.');
    }
  } catch (err) {
    console.error('Supabase connection test failed:', err);
  }
})();
